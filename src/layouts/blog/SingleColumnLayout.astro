---

import "the-new-css-reset";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import type { Blog } from "../../types/microcms";

type Props = Blog;

const {
	title,
	createdAt,
	updatedAt: _updateAt,
	publishedAt: _publishedAt,
	content,
	eyecatch,
	category,
} = Astro.props;
const updatedAt = new Date(_updateAt);
const publishedAt = new Date(_publishedAt);

const categoryName = category ? category.name : "ブログ";
---
<html lang="ja">
	<head>
		<BaseHead title={title} description={""} />
		<style lang="scss">
			@font-face {
				font-display: swap;
				font-family: 'Gothic A1';
				font-style: normal;
				font-weight: 400;
				src: url('/fonts/gothic-a1-v13-latin-regular.woff2') format('woff2');
			}
			body {
				line-height: calc(1em* 80 / 40);
				font-size: 1rem;
				color: #333;
				-webkit-text-size-adjust: 100%;
			}
			main {
				width: 100%;
				background-color: #f6f6f6;
			}
			article {
				width: calc(100% - 3rem);
				max-width: 800px;
				margin: auto;
			}
			.article-header {
				@include pc{
					max-width: 37.3333333333rem;
					margin-inline: auto;
				}
				.metaline {
					.badge {
						display: inline-block;
						padding: .125rem 1rem;
						font-weight: 400;
						font-size: calc(1rem* 10 / 12);
						line-height: calc(1em* 60 / 40);
						color: #fff;
						background-color: #096fc8;
						border-radius: 99rem;
					}
				}
				.title {
					margin-top: 1rem;
					font-weight: 800;
					font-size: calc(1rem* 10 / 9);
					line-height: calc(1em* 63 / 40);
					text-align: left;
					@include pc{
						font-size: calc(1rem* 10 / 5);
						line-height: calc(1em* 60 / 40);
					}
				}
			}
			.article-body {
				overflow: hidden;
				margin-top: 1.5rem;
				@include pc{
					margin-top: 3rem;
				}
				@include sp {
					margin-left: -1.5rem;
					margin-right: -1.5rem;
					padding-bottom: 2.5rem;
					background-color: #fff;
				}
				@include pc {
					margin-left: 0;
					margin-right: 0;
					padding-bottom: 6.5rem;
					border-radius: .5rem;
					background-color: #fff;
    			}

				.article-body-inner {
					padding-top: 1.5rem;

					@include mq("md"){
						padding-top: 4rem;
						max-width: 37.3333333333rem;
						margin-inline: auto;
					}

					@include mq("lg"){
						max-width: 40.3333333333rem;
					}

					.article-body-inner-content {
						padding-inline: 1.5rem;
					}
				}
			}
			.eyecatch {
				width: 100%;
			}
			.eyecatch img {
				display: block;
				margin: 0 auto;
			}
			.date {
				margin-top: 1rem;
				color: rgb(var(--gray));
				display: flex;
				gap: 1rem;
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="article-header">
					<p class="metaline">
						<span class="badge">{categoryName}</span>
					</p>
					<h1 class="title">{title}</h1>
					<div class="date">
						<FormattedDate date={publishedAt} />
						{
							updatedAt && (
								<div class="last-updated-on">
									Last updated on <FormattedDate date={updatedAt} />
								</div>
							)
						}
					</div>
				</div>
				<div  class="article-body">
					<div class="eyecatch">
						{eyecatch && <img width={eyecatch.width} height={eyecatch.height} src={eyecatch.url} alt="" />}
					</div>
					<div class="article-body-inner">
						<Fragment  class="article-body-inner-content" set:html={content}/>
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
